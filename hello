from typing import List
from collections import deque, Counter
import heapq

class Solution:
    def minimumTime(self, arr: List[int]) -> int:
        dq = deque(arr) 
        min_heap = arr[:] 
        heapq.heapify(min_heap)  
        
        freq = Counter(arr) 
        time = 0

        while dq:
            while min_heap and freq[min_heap[0]] == 0:
                heapq.heappop(min_heap) 

            min_val = min_heap[0] 

            if dq[0] == min_val:
                dq.popleft() 
            else:
                dq.append(min_val) 
                dq.remove(min_val)  

            freq[min_val] -= 1
            time += 1

        return time
